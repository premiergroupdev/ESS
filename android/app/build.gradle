def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '41'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '41.0.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.google.gms.google-services'
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {

    compileSdkVersion 34
    ndkVersion "25.1.8937393"

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
        checkReleaseBuilds false
    }

    defaultConfig {
        applicationId "com.premiergroup.ess"
        minSdkVersion 21
        targetSdkVersion 34
        multiDexEnabled true
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {

        release {


            signingConfig signingConfigs.release
            shrinkResources false
            minifyEnabled false


        }

    }

    flavorDimensions "flavors"
    productFlavors {
    dev {
        dimension "flavors"
        resValue "string", "app_name", "Ess"
        applicationId "com.premiergroup.ess"
        versionNameSuffix "-dev"
    }
    prod {
        dimension "flavors"
        resValue "string", "app_name", "Ess"
        applicationId "com.premiergroup.ess"
    }
}
}

flutter {
    source '../..'
}

dependencies
        {
            implementation 'com.google.android.gms:play-services-location:18.0.0'
            implementation 'com.google.android.play:app-update:2.1.0'
            implementation 'com.google.android.play:app-update-ktx:2.1.0'
            implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
            implementation platform('com.google.firebase:firebase-bom:31.1.1')
            implementation 'com.android.support:multidex:2.0.1'
        }
